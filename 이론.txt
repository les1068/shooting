★벡터 : 힘의 방향과 크기를 나타내는데 사용
★단위벡터(Unit Vector) : 힘의 방향만 표현하는 벡터. 크기가 *항상 1이다. 벡터를 정규화 해서 만들 수 있다.(Normalized)
★노멀벡터 : 특정 평면에 수직인 벡터. 반사를 계산하는데 *필수. 겉면과 안쪽면을 구분할 수 있게 해준다.

★벡터의 내적(Dot Product) : 벡터와 벡터를 내적했을 때 결과는 *스칼라로 계산된다.
  백터의 내적을 이용해서 두 벡터의 사이각을 구할 수 있다.

★벡터의 외적(Croos Product) : 투 벡터가 이루는 평면에 *수직인 벡터를 계산할 수 있다.
  삼각형의 앞면과 뒷면을 구분할 수 있게 해준다.

카메라가 삼각형을 그릴지 말지를 판단하는 방법은 카메라의 forward 벡터와 삼각형의 
normal벡터의 사이각을 계산해서 예각(0~90도)이면 그리지 않고 둔각이면(90~180도)이면 그린다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
★행렬 :  숫자를 행(Row)과 열(Column)을 나누어서 표현한 것.
         행렬과 행렬의 곱은 행렬이 나온다.
         행렬은 *교환법칙이 성립하지 않는다.

Transform(변환) : 위치, 회전, 스케일을 한번에 표현한 것
	          행렬로 표현한다. (변환 행렬)
                      4 * 4 행렬을 사용

단위행렬 : I로 표현(대문자 i)
             대부분의 수는 0이고 왼쪽 위에서 오른쪽 아래로 가는 대각선 부부만 1이다.
             곱하더라도 곱해지는 대상은 항상 변하지 않는다. 
	 단위행렬은 교환법칙이 성립된다.

역행렬 :    -1
           M 
           행렬 M이 있을 때 M과 M의 역행렬을 곱하면 단위행렬이 나온다.

★이동행렬(Translate Matrix)
                         
		 x y z
	            (1,2,3만큼 움직이는 행렬)
	1 0 0 x       1001 ( 0 )     1*(0) + 0*(0) + 0*(0) + 1*(1) = 1 
	0 1 0 y   =  0102 ( 0 )  = 0*(0) + 1*(0) + 0*(0) + 2*(1) = 2
	0 0 1 z       0013 ( 0 )     0*(0) + 0*(0) + 1*(0) + 3*(1) = 3
	0 0 0 1       0001 ( 1 )     0*(0) + 0*(0) + 0*(0) + 1*(1) = 1


★크기변환행렬(Scale Matrix) 

x는 2배 y는 그대로 z는 3배 늘리는 행렬
	x 0 0 0      2 0 0 0 ( 2 )      2*(2) + 0*(3) + 0*(5) + 0*(1) = 4 
	0 y 0 0   = 0 1 0 0 ( 3 )  =  0*(2) + 1*(3) + 0*(5) + 0*(1) = 3
	0 0 z 0      0 0 3 0 ( 5 )      0*(2) + 0*(3) + 3*(5) + 0*(1) = 15
	0 0 0 1      0 0 0 1 ( 1 )      0*(2) + 0*(3) + 0*(5) + 1*(1) = 1

(x,y,z,w)에서 w값의 의미
w가 1이면 위치값
w가 0이면 벡터

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

회전행렬(Rotation Martix) 

       1 0 0 0
       0 1 0 0 
       0 0 1 0
       0 0 0 1


















